import 'dart:io';
import 'package:approovsdkflutter/approovsdkflutter.dart';

class HttpService {

  static String httpProtocol = "https";

  static String websocketProtocol = "wss";

  static String auth_token;

  static String get localhost {
    httpProtocol = "http";
    websocketProtocol = "ws";

    if (Platform.isAndroid) {
      return '10.0.2.2:8002';
    } else {
      return 'localhost:8002';
    }
  }

  // Choose one of the below endpoints:
  static String apiHost = 'token.phoenix-channels.demo.approov.io';
  // static String apiHost = 'token-binding.phoenix-channels.demo.approov.io';

  static String get apiBaseUrl {
    // We need to call apiHost first, otherwise we get https in localhost.
    String host = apiHost;

    return "${httpProtocol}://${host}";
  }

  static final httpClient = () {
    final approovClient = ApproovClient();
    approovClient.approovHeader = Approovsdkflutter.X_APPROOV_HEADER;

    // @TODO Cannot be set here until the appoovsdkflutter is changed to not
    //       throw when the token binding header is missing.
    // Approovsdkflutter.setBindingHeader('Authorization');

    return approovClient;
  } ();

  static String get websocketUrl {
    return "${websocketProtocol}://${apiHost}";
  }

  static fetchApproovToken({token_type = ""}) async {
    switch(token_type) {
      // For demo purpose only
      case "token:invalid":
        return "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjQ3MDg3ODMyMDV9.cG01T9zBv_NzcNdIHU3lWXKNsWoAktOJ9Xt6mA8uTFs";

      default:
        String token = await Approovsdkflutter.fetchApproovToken(apiHost).then((value) => value.token);
        return token;
    }
  }

  static fetchApproovTokenBinding(String data, {token_type = ""}) {
    // @TODO Unable to use token binding until the Approov SDK is changed to not
    //       throw when the token binding header is missing.
    // Approovsdkflutter.setDataHashInToken(data);

    return fetchApproovToken(token_type: token_type);
  }
}
